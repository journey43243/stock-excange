"""Initial

Revision ID: 2a54ef62c47c
Revises: 
Create Date: 2025-06-05 10:52:28.305877

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2a54ef62c47c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('instrument',
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('ticker')
    )
    op.create_table('user_account',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('api_key', sa.String(length=64), nullable=False),
    sa.Column('role', sa.Enum('USER', 'ADMIN', name='userrole'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_key')
    )
    op.create_table('balance',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ticker'], ['instrument.ticker'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'ticker')
    )
    op.create_table('order',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'EXECUTED', 'PARTIALLY_EXECUTED', 'CANCELLED', name='orderstatus'), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('filled', sa.Integer(), nullable=False),
    sa.Column('direction', sa.Enum('BUY', 'SELL', name='direction'), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['ticker'], ['instrument.ticker'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_book_level',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('is_bid', sa.Boolean(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['ticker'], ['instrument.ticker'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['ticker'], ['instrument.ticker'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction')
    op.drop_table('order_book_level')
    op.drop_table('order')
    op.drop_table('balance')
    op.drop_table('user_account')
    op.drop_table('instrument')
    # ### end Alembic commands ###
